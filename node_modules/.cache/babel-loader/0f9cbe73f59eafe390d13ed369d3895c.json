{"ast":null,"code":"var _jsxFileName = \"/Users/georgie/Desktop/ToDoReact-2.4.1/src/App.js\";\nimport React from 'react';\nimport UniqueId from 'react-html-id';\nimport { ToDo } from './ToDo/ToDo';\nimport { Completed } from './Completed/Completed';\nimport './App.css';\nimport Plus from \"./assets/graphics/Plus.svg\";\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleInputHandler = () => {\n      const doesShow = this.state.showForm;\n      this.setState({\n        showForm: !doesShow\n      });\n    };\n\n    this.toggleCompletedHandler = () => {\n      const doesShow = this.state.showCompleted;\n      this.setState({\n        showCompleted: !doesShow\n      });\n    };\n\n    UniqueId.enableUniqueIds(this);\n    this.state = {\n      todos: [{\n        title: 'note one',\n        id: '231r'\n      }, {\n        title: 'note two',\n        id: 'efef'\n      }, {\n        title: 'note three',\n        id: 'sd09s'\n      }],\n      message: '',\n      completed: [{\n        title: '1',\n        id: 'grhwg'\n      }, {\n        title: '2',\n        id: '9joi'\n      }],\n      showForm: false,\n      showCompleted: false\n    };\n  }\n\n  getLSList() {\n    console.log('Fn: ' + this.state.todos);\n  }\n\n  async addItem(e) {\n    e.preventDefault();\n    const todos = this.state.todos;\n    let newItem = {\n      title: this.newItem.value\n    };\n    const isOnTheList = this.state.todos.includes(newItem); //try destructuring here\n\n    if (isOnTheList) {\n      this.setState({\n        message: 'This To-do is already on the list.'\n      });\n    } else {\n      newItem = {\n        title: this.newItem.value,\n        id: this.nextUniqueId()\n      } && newItem !== '' && this.setState({\n        todos: [...this.state.todos, newItem],\n        message: 'Added entry to to-do list'\n      });\n    }\n\n    this.addForm.reset();\n    const newList = this.state.todos.push[newItem];\n    await localStorage.setItem('toDos', this.state.todos);\n    await console.log(this.state.todos);\n    console.log(newList);\n    this.getLSList();\n  }\n\n  completedItem(item) {\n    const newTodos = this.state.todos.filter(todo => {\n      return todo !== item;\n    }); //add to local storage here\n    //remove from prev. LS\n\n    this.setState({\n      completed: [...this.state.completed, item],\n      message: 'Added to completed list',\n      todos: [...newTodos]\n    });\n  }\n\n  removeItem(item) {\n    const newTodos = this.state.completed.filter(todo => {\n      return todo !== item;\n    }); //remove from LS\n\n    this.setState({\n      completed: [...newTodos],\n      message: 'Deleted old to-do'\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          todos = _this$state.todos,\n          message = _this$state.message;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"banner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Your To-Do's\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Go Mom! Way to get stuff done.\"), React.createElement(\"p\", {\n      className: \"msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, message), React.createElement(\"img\", {\n      src: Plus,\n      alt: \"plus_clickme_show_input_form\",\n      onClick: this.toggleInputHandler,\n      className: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), this.state.showForm === true ? React.createElement(\"div\", {\n      className: \"inputForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      ref: input => this.addForm = input,\n      onSubmit: e => {\n        this.addItem(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Type To-do Here\",\n      id: \"newItemInput\",\n      ref: input => this.newItem = input,\n      className: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"button\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })))) : null), React.createElement(\"div\", {\n      className: \"block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Map from LS here:\"), this.state.todos.map(item => React.createElement(ToDo, {\n      click: () => this.completedItem(item),\n      title: item.title,\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })))))), React.createElement(\"button\", {\n      className: \"completedBtn\",\n      onClick: this.toggleCompletedHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Show Completed\"), this.state.showCompleted === true ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Map from LS here:\"), this.state.completed.map(item => React.createElement(Completed, {\n      click: () => this.removeItem(item),\n      title: item.title,\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }))))))) : null));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/georgie/Desktop/ToDoReact-2.4.1/src/App.js"],"names":["React","UniqueId","ToDo","Completed","App","Component","constructor","props","toggleInputHandler","doesShow","state","showForm","setState","toggleCompletedHandler","showCompleted","enableUniqueIds","todos","title","id","message","completed","getLSList","console","log","addItem","e","preventDefault","newItem","value","isOnTheList","includes","nextUniqueId","addForm","reset","newList","push","localStorage","setItem","completedItem","item","newTodos","filter","todo","removeItem","render","Plus","input","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport UniqueId from 'react-html-id';\nimport { ToDo } from './ToDo/ToDo';\nimport { Completed } from './Completed/Completed';\nimport './App.css';\nimport Plus from './assets/graphics/Plus.svg';\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    UniqueId.enableUniqueIds(this);\n    this.state = {\n      todos: [\n        { title: 'note one', id: '231r' },\n        { title: 'note two', id: 'efef' },\n        { title: 'note three', id: 'sd09s' }\n      ],\n      message: '',\n      completed: [\n        { title: '1', id: 'grhwg' },\n        { title: '2', id: '9joi' }\n      ],\n      showForm: false,\n      showCompleted: false\n    };\n  }\n\n  getLSList() {\n    console.log('Fn: ' + this.state.todos);\n  }\n\n  async addItem(e) {\n    e.preventDefault();\n    const { todos } = this.state;\n    let newItem = { title: this.newItem.value };\n\n    const isOnTheList = this.state.todos.includes(newItem); //try destructuring here\n\n    if (isOnTheList) {\n      this.setState({\n        message: 'This To-do is already on the list.'\n      });\n    } else {\n      newItem =\n        { title: this.newItem.value, id: this.nextUniqueId() } &&\n        newItem !== '' &&\n        this.setState({\n          todos: [...this.state.todos, newItem],\n          message: 'Added entry to to-do list'\n        });\n    }\n    this.addForm.reset();\n    const newList = this.state.todos.push[newItem];\n    await localStorage.setItem('toDos', this.state.todos);\n    await console.log(this.state.todos);\n    console.log(newList);\n    this.getLSList();\n  }\n\n  completedItem(item) {\n    const newTodos = this.state.todos.filter(todo => {\n      return todo !== item;\n    });\n    //add to local storage here\n    //remove from prev. LS\n    this.setState({\n      completed: [...this.state.completed, item],\n      message: 'Added to completed list',\n      todos: [...newTodos]\n    });\n  }\n\n  removeItem(item) {\n    const newTodos = this.state.completed.filter(todo => {\n      return todo !== item;\n    });\n    //remove from LS\n    this.setState({\n      completed: [...newTodos],\n      message: 'Deleted old to-do'\n    });\n  }\n\n  toggleInputHandler = () => {\n    const doesShow = this.state.showForm;\n    this.setState({ showForm: !doesShow });\n  };\n\n  toggleCompletedHandler = () => {\n    const doesShow = this.state.showCompleted;\n    this.setState({ showCompleted: !doesShow });\n  };\n\n  render() {\n    const { todos, message } = this.state;\n    return (\n      <div>\n        <div className=\"header\">\n          <h1 className=\"banner\">Your To-Do's</h1>\n          <h3>Go Mom! Way to get stuff done.</h3>\n          <p className=\"msg\">{message}</p>\n          <img\n            src={Plus}\n            alt=\"plus_clickme_show_input_form\"\n            onClick={this.toggleInputHandler}\n            className=\"plus\"\n          />\n\n          {this.state.showForm === true ? (\n            <div className=\"inputForm\">\n              <form\n                ref={input => (this.addForm = input)}\n                onSubmit={e => {\n                  this.addItem(e);\n                }}\n              >\n                <div>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Type To-do Here\"\n                    id=\"newItemInput\"\n                    ref={input => (this.newItem = input)}\n                    className=\"input\"\n                  />\n                  <br />\n                  <br />\n                  <button className=\"button\" type=\"submit\">\n                    Add\n                  </button>\n                  <br />\n                  <br />\n                </div>\n              </form>\n            </div>\n          ) : null}\n        </div>\n\n        <div className=\"block\">\n          <table>\n            <tbody>\n              <tr>\n                <td>\n                  <p>Map from LS here:</p>\n                  {this.state.todos.map(item => (\n                    <ToDo\n                      click={() => this.completedItem(item)}\n                      title={item.title}\n                      key={item.id}\n                    />\n                  ))}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <button\n            className=\"completedBtn\"\n            onClick={this.toggleCompletedHandler}\n          >\n            Show Completed\n          </button>\n          {this.state.showCompleted === true ? (\n            <div>\n              <table>\n                <tbody>\n                  <tr>\n                    <td>\n                      <p>Map from LS here:</p>\n                      {this.state.completed.map(item => (\n                        <Completed\n                          click={() => this.removeItem(item)}\n                          title={item.title}\n                          key={item.id}\n                        />\n                      ))}\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}